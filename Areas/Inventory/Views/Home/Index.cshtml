@{
ViewBag.Title = "库存清单";
Layout = "Panel";
}


<div class="flex justify-between mb-4">
    <h2 class="text-2xl">@ViewData["Title"]</h2>
    <a asp-action="Create"
       class="bg-blue-500 text-white px-4 py-1 rounded hover:bg-blue-600 transition">Add Warehouse</a>
</div>
<div>
    <div class="bg-white rounded-lg shadow overflow-hidden">
        <table class="min-w-full divide-y divide-gray-200" id="inventoryTable">
            <thead class="text-black">
            <tr>
                <th class="px-6 py-3 text-left tracking-wider">物品编号</th>
                <th class="px-6 py-3 text-left tracking-wider">物品名称</th>
                <th class="px-6 py-3 text-left tracking-wider">仓库</th>
                <th class="px-6 py-3 text-left tracking-wider">位置</th>
                <th class="px-6 py-3 text-left tracking-wider">库存数量</th>
                <th class="px-6 py-3 text-left tracking-wider">单位</th>
                <th class="px-6 py-3 text-left tracking-wider">最后更新</th>
            </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
            <!-- 数据将通过JavaScript动态填充 -->
            </tbody>
        </table>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // 获取数据
        fetch('/api/Inventory/InventoryBalance')
            .then(response => {
                if (!response.ok) throw new Error('网络响应不正常');
                return response.json();
            })
            .then(data => {
                renderTable(data);
                renderCharts(data);
            })
            .catch(error => {
                console.error('获取数据失败:', error);
                document.querySelector('#inventoryTable tbody').innerHTML =
                    '<tr><td colspan="7" class="px-6 py-4 text-center text-red-500">加载数据失败: ' + error.message + '</td></tr>';
            });

        // 渲染表格
        function renderTable(data) {
            const tableBody = document.querySelector('#inventoryTable tbody');

            if (data.length === 0) {
                tableBody.innerHTML = '<tr><td colspan="7" class="px-6 py-4 text-center text-gray-500">没有找到库存记录</td></tr>';
                return;
            }

            data.forEach(item => {
                const row = document.createElement('tr');
                row.className = 'hover:bg-gray-50';
                row.innerHTML = `
                    <td class="px-6 py-4">${item.item?.code || 'N/A'}</td>
                    <td class="px-6 py-4">${item.item?.name || 'N/A'}</td>
                    <td class="px-6 py-4">${item.warehouse?.name || 'N/A'}</td>
                    <td class="px-6 py-4">${item.warehouse?.location || 'N/A'}</td>
                    <td class="px-6 py-4">${parseFloat(item.quantity).toFixed(2)}</td>
                    <td class="px-6 py-4">${item.item?.unit || ''}</td>
                    <td class="px-6 py-4">${new Date(item.lastUpdated).toLocaleString()}</td>
                `;
                tableBody.appendChild(row);
            });
        }

        function renderCharts(data) {
            const itemData = {};
            const warehouseData = {};

            data.forEach(item => {
                if (!itemData[item.item?.name]) {
                    itemData[item.item?.name] = 0;
                }
                itemData[item.item?.name] += item.quantity;

                if (!warehouseData[item.warehouse?.name]) {
                    warehouseData[item.warehouse?.name] = 0;
                }
                warehouseData[item.warehouse?.name] += item.quantity;
            });
            
        }
    });
</script>